// <auto-generated />
using System;
using FyreWorksPM.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FyreWorksPM.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250525234232_InitialReset")]
    partial class InitialReset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BidModel", b =>
                {
                    b.Property<int>("BidModelBidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidModelBidId"));

                    b.Property<string>("BidModelBidNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BidModelClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BidModelCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("BidModelIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("BidModelProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BidModelSiteInfoId")
                        .HasColumnType("int");

                    b.HasKey("BidModelBidId");

                    b.HasIndex("BidModelClientId");

                    b.HasIndex("BidModelSiteInfoId");

                    b.ToTable("BidInfo", (string)null);
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidTaskModel", b =>
                {
                    b.Property<int>("BidTaskModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidTaskModelId"));

                    b.Property<int>("BidTaskModelBidId")
                        .HasColumnType("int");

                    b.Property<decimal>("BidTaskModelCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BidTaskModelSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BidTaskModelTaskModelId")
                        .HasColumnType("int");

                    b.HasKey("BidTaskModelId");

                    b.HasIndex("BidTaskModelBidId");

                    b.HasIndex("BidTaskModelTaskModelId");

                    b.ToTable("BidTasks", (string)null);
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ClientModel", b =>
                {
                    b.Property<int>("ClientModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientModelId"));

                    b.Property<string>("ClientModelContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientModelEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientModelPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientModelId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ItemTypeModel", b =>
                {
                    b.Property<int>("ItemTypeModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeModelId"));

                    b.Property<string>("ItemTypeModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeModelId");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.TaskModel", b =>
                {
                    b.Property<int>("TaskModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskModelId"));

                    b.Property<decimal>("TaskModelDefaultCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaskModelDefaultSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaskModelTaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskModelType")
                        .HasColumnType("int");

                    b.HasKey("TaskModelId");

                    b.ToTable("TaskTemplates");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.UserModel", b =>
                {
                    b.Property<int>("UserModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserModelId"));

                    b.Property<string>("UserModelEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModelPasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModelUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserModelId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Models.BidComponentLineItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Piped")
                        .HasColumnType("bit");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitSale")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.ToTable("BidComponents");
                });

            modelBuilder.Entity("FyreWorksPM.ViewModels.BidLineItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialBidBidModelBidId")
                        .HasColumnType("int");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WireBidBidModelBidId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.HasIndex("MaterialBidBidModelBidId");

                    b.HasIndex("WireBidBidModelBidId");

                    b.ToTable("BidLineItems");
                });

            modelBuilder.Entity("ItemModel", b =>
                {
                    b.Property<int>("ItemModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemModelId"));

                    b.Property<string>("ItemModelDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemModelItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ItemModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemModelId");

                    b.HasIndex("ItemModelItemTypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SiteInfoModel", b =>
                {
                    b.Property<int>("SiteInfoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteInfoModelId"));

                    b.Property<string>("SiteInfoModelAddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteInfoModelAddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SiteInfoModelBuildingArea")
                        .HasColumnType("float");

                    b.Property<string>("SiteInfoModelCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteInfoModelConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SiteInfoModelIsSprinklered")
                        .HasColumnType("bit");

                    b.Property<string>("SiteInfoModelJurisdiction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteInfoModelNumberOfStories")
                        .HasColumnType("int");

                    b.Property<string>("SiteInfoModelOccupancyGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteInfoModelOccupantLoad")
                        .HasColumnType("int");

                    b.Property<string>("SiteInfoModelParcelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteInfoModelScopeOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteInfoModelState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteInfoModelZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiteInfoModelId");

                    b.ToTable("BidSiteInfo", (string)null);
                });

            modelBuilder.Entity("BidModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.ClientModel", "BidModelClient")
                        .WithMany()
                        .HasForeignKey("BidModelClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteInfoModel", "BidModelSiteInfo")
                        .WithMany()
                        .HasForeignKey("BidModelSiteInfoId");

                    b.Navigation("BidModelClient");

                    b.Navigation("BidModelSiteInfo");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidTaskModel", b =>
                {
                    b.HasOne("BidModel", "BidTaskModelBid")
                        .WithMany("BidModelTasks")
                        .HasForeignKey("BidTaskModelBidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.TaskModel", "BidTaskModelTask")
                        .WithMany()
                        .HasForeignKey("BidTaskModelTaskModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BidTaskModelBid");

                    b.Navigation("BidTaskModelTask");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Models.BidComponentLineItemModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany("BidModelComponentLineItems")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("FyreWorksPM.ViewModels.BidLineItemModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany()
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BidModel", "MaterialBid")
                        .WithMany("MaterialLineItems")
                        .HasForeignKey("MaterialBidBidModelBidId");

                    b.HasOne("BidModel", "WireBid")
                        .WithMany("WireLineItems")
                        .HasForeignKey("WireBidBidModelBidId");

                    b.Navigation("Bid");

                    b.Navigation("MaterialBid");

                    b.Navigation("WireBid");
                });

            modelBuilder.Entity("ItemModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.ItemTypeModel", "ItemModelItemType")
                        .WithMany("ItemTypeModelItems")
                        .HasForeignKey("ItemModelItemTypeId");

                    b.Navigation("ItemModelItemType");
                });

            modelBuilder.Entity("BidModel", b =>
                {
                    b.Navigation("BidModelComponentLineItems");

                    b.Navigation("BidModelTasks");

                    b.Navigation("MaterialLineItems");

                    b.Navigation("WireLineItems");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ItemTypeModel", b =>
                {
                    b.Navigation("ItemTypeModelItems");
                });
#pragma warning restore 612, 618
        }
    }
}
