// <auto-generated />
using System;
using FyreWorksPM.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FyreWorksPM.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BidModel", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"));

                    b.Property<decimal>("AdjustedSaleTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BidNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("LaborTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MaterialMarkup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteInfoId")
                        .HasColumnType("int");

                    b.HasKey("BidId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SiteInfoId");

                    b.ToTable("BidInfo", (string)null);
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLaborRateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidLaborTemplateId")
                        .HasColumnType("int");

                    b.Property<decimal>("OvernightBilledRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvernightDirectRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RegularBilledRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RegularDirectRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BidLaborTemplateId");

                    b.ToTable("BidLaborRateModel");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLaborTemplateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BidId")
                        .IsUnique();

                    b.ToTable("BidLaborTemplates");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLocationHourModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidLaborTemplateId")
                        .HasColumnType("int");

                    b.Property<decimal>("Lift")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Normal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Panel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pipe")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BidLaborTemplateId");

                    b.ToTable("BidLocationHourModel");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidMaterialLineItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitSale")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.ToTable("BidMaterialLineItems");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidTaskModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaskModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.HasIndex("TaskModelId");

                    b.ToTable("BidTasks", (string)null);
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ClientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ItemTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.LaborRateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LaborTemplateId")
                        .HasColumnType("int");

                    b.Property<decimal>("OvernightBilledRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OvernightDirectRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RegularBilledRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RegularDirectRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LaborTemplateId");

                    b.ToTable("LaborRates");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.LaborTemplateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LaborTemplates");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.LocationHourModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LaborTemplateId")
                        .HasColumnType("int");

                    b.Property<decimal>("Lift")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Normal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Panel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pipe")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LaborTemplateId");

                    b.ToTable("LocationHours");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ManualLaborHourModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.ToTable("ManualLaborHours");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.TaskModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DefaultCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DefaultSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaskTemplates");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Models.BidComponentLineItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Piped")
                        .HasColumnType("bit");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitSale")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.ToTable("BidComponentLineItems");
                });

            modelBuilder.Entity("FyreWorksPM.ViewModels.BidWireLineItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitSale")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.ToTable("BidWireLineItems");
                });

            modelBuilder.Entity("ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SiteInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingArea")
                        .HasColumnType("float");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSprinklered")
                        .HasColumnType("bit");

                    b.Property<string>("Jurisdiction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStories")
                        .HasColumnType("int");

                    b.Property<string>("OccupancyGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OccupantLoad")
                        .HasColumnType("int");

                    b.Property<string>("ParcelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BidSiteInfo", (string)null);
                });

            modelBuilder.Entity("BidModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.ClientModel", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteInfoModel", "SiteInfo")
                        .WithMany()
                        .HasForeignKey("SiteInfoId");

                    b.Navigation("Client");

                    b.Navigation("SiteInfo");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLaborRateModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.BidLaborTemplateModel", "BidLaborTemplate")
                        .WithMany("LaborRates")
                        .HasForeignKey("BidLaborTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BidLaborTemplate");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLaborTemplateModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithOne("BidLaborTemplate")
                        .HasForeignKey("FyreWorksPM.DataAccess.Data.Models.BidLaborTemplateModel", "BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLocationHourModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.BidLaborTemplateModel", "BidLaborTemplate")
                        .WithMany("LocationHours")
                        .HasForeignKey("BidLaborTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BidLaborTemplate");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidMaterialLineItemModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany("MaterialLineItems")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidTaskModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany("Tasks")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.TaskModel", "Task")
                        .WithMany()
                        .HasForeignKey("TaskModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.LaborRateModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.LaborTemplateModel", "LaborTemplateModel")
                        .WithMany("LaborRates")
                        .HasForeignKey("LaborTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaborTemplateModel");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.LocationHourModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.LaborTemplateModel", "LaborTemplateModel")
                        .WithMany("LocationHours")
                        .HasForeignKey("LaborTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaborTemplateModel");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ManualLaborHourModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany("ManualLaborHours")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Models.BidComponentLineItemModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany("ComponentLineItems")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("FyreWorksPM.ViewModels.BidWireLineItemModel", b =>
                {
                    b.HasOne("BidModel", "Bid")
                        .WithMany("WireLineItems")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("ItemModel", b =>
                {
                    b.HasOne("FyreWorksPM.DataAccess.Data.Models.ItemTypeModel", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("BidModel", b =>
                {
                    b.Navigation("BidLaborTemplate")
                        .IsRequired();

                    b.Navigation("ComponentLineItems");

                    b.Navigation("ManualLaborHours");

                    b.Navigation("MaterialLineItems");

                    b.Navigation("Tasks");

                    b.Navigation("WireLineItems");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.BidLaborTemplateModel", b =>
                {
                    b.Navigation("LaborRates");

                    b.Navigation("LocationHours");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.ItemTypeModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FyreWorksPM.DataAccess.Data.Models.LaborTemplateModel", b =>
                {
                    b.Navigation("LaborRates");

                    b.Navigation("LocationHours");
                });
#pragma warning restore 612, 618
        }
    }
}
